---
layout:     post
title:      "JAVA多线程"
subtitle:   "多线程的基础只是"
date:       2014-07-08 12:00:00
author:     "zhou---jing"
header-img: "img/post-bg-03.jpg"
---

<h2 class="section-heading">1):认识多任务、多进程、单线程、多线程</h2>
<p>以前的DOS系统是单任务的，就是说计算机只能在同一时刻只能做一件事情（比如说听歌的时候不能修copy文件），而如今的操作系统都是多任务操作系统了，每个应用应用程序对应一个任务，而多任务的实现方式也是利用调度来实现多处理器的分配，事实上处理器在某一时刻只会给一件任务提供服务，而一个任务可以开启多个进程，并分别分配资源，而一个进程也可以创建多个线程，比如说JVM的进程，而线程的调度则是JVM的调度机制来实现的。</p>

<blockquote>实际上，操作的系统的多进程实现了多任务并发执行，程序的多线程实现了进程的并发执行。</blockquote>

<h2 class="section-heading">2):java中的多线程</h2>
<h4 class="section-heading">2.1):java线程的分类</h4>
<p>java中线程分为两类：用户线程和守护线程，当然java对于它们之间的转换提供了api的，就是setDaemon，它允许用户设置线程为守护线程，注意的是线程设置必须在线程start之前执行，不然会报错。那么守护线程和用户线程之间存在什么区别呢？</p>

<blockquote>
<p>a）：用户线程的离开会对jvm关闭存在影响，而守护线程不会，就是说如果用户线程都执行完成了（不论此时是否还有守护线程），jvm则会关闭。
</p>
<p>b）：在daemon线程中创建的线程也是daemon的，而在用户线程创建的线程则是用户线程。那么守护线程的作用是什么？我们可以把它类比于Android中的service，它主要的功能就是为其他线程提供服务，比如说垃圾回收线程是一个守护线程，它的作用就是处理其他线程产生的垃圾。
</p>
</blockquote>

<h4 class="section-heading">2.2):java线程的创建</h4>
<p>在java中存在三种方式创建线程：</p>
<blockquote>
<p>a）：继承Thread类</p>
<p>b）：实现Runnable接口</p>
<p>c）：实现Callable接口</p>
</blockquote>

<p>三者的区别在于：</p>
<blockquote>
<p>a）：a无法继承其他类</p>
<p>b）：b和c适合多个线程处理同一资源</p>
<p>c）：c存在线程返回结果以及抛出异常</p>
</blockquote>

<p>线程的优先级：线程创建的优先级默认是和创建该线程的优先级一样（包括守护线程）,还真是验证了那句谚语“龙生龙，凤生凤，老鼠的儿子会打洞”</p>
